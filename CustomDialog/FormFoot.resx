<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>